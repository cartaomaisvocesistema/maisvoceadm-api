import Head from 'next/head';

import LayoutLandingPage from '@/layouts/LayoutLandingpage';
import styles from './newpassword.module.scss';
import bannerlogin from '../../../public/images/logotipo2.png';

import Image from 'next/image';
import Link from 'next/link';
import { AuthContext } from '@/contexts/AuthContext';
import { useContext, useEffect } from 'react';
import { useRouter } from 'next/router';
import { useState } from 'react';
import { api } from "../../services/api";


export default function NewPassword() {

  const router = useRouter();

  const [userValue, setUserValue] = useState({});
  const [passwordValue, setPasswordValue] = useState('');
  const [confirmPasswordValue, setConfirmPasswordValue] = useState('');

  const getUsuarioByHash = async () => {
    if (!router.query.hash) {
      return;
    }
    let userhash = {
      userhash: router.query.hash
    }
    try {
      const response = await api.post(`/api/usuarios/getuserhash`, userhash)
      const user = response.data;
      setUserValue(user);
    } catch (error) {
      router.push('/');
      console.log(error);
    }

  }

  useEffect(() => {
    getUsuarioByHash();
  }, [router.query.hash]);


  const handleSubmitSendPassword = async (e) => {
    e.preventDefault();

    if (passwordValue !== confirmPasswordValue) {
      alert('O campo senha e confirme sua senha estão diferentes.');
    } else {
      try {
        const userUpdatedPassword = {
          id: userValue.id,
          password: passwordValue,
          userhash: userValue.newhash
        }

        const response2 = await api.patch(`/api/usuarios/updateuserpassword`, userUpdatedPassword)
        const data2 = (response2).data;

        if (response2.status === 200) {
          alert('Sua senha foi redefinida com sucesso.');
          router.push('/');
        }

      } catch (error) {
        console.log(error)
      }

    }
  }

  return (
    <>
      <Head>
        <title>Cartão Mais Você</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <LayoutLandingPage>
          <div className={styles.login}>
            <div className={styles.container}>
              <div className={styles.loginleft}>
                <form className={styles.loginleft} onSubmit={handleSubmitSendPassword}>
                  <span className={styles.logintitle}><span className={styles.logintitlename}>Redefina sua senha.</span></span>

                  <label className={styles.formlabel} htmlFor="password">Nova senha:</label>
                  <input
                    className={styles.logininput}
                    id="password"
                    type="password"
                    name="password"
                    maxLength="70"
                    onChange={e => setPasswordValue(e.target.value)}
                    required
                  />

                  <label className={styles.formlabel} htmlFor="confirmpassword">Confirme a nova senha:</label>
                  <input
                    className={styles.logininput}
                    id="confirmpassword"
                    type="password"
                    name="confirmpassword"
                    maxLength="70"
                    onChange={e => setConfirmPasswordValue(e.target.value)}
                    required
                  />
                  <button
                    className={styles.loginbtn}
                    type="submit">
                    Enviar
                  </button>
                </form>
              </div>
              <div>
                <div className={styles.loginright}>
                  <Image src={bannerlogin} className={styles.loginbanner} alt='banner2' />
                </div>
                <span className={styles.titleadmin}>Administrativo</span>
              </div>
            </div>
          </div>
        </LayoutLandingPage>
      </main>
    </>
  )
}
